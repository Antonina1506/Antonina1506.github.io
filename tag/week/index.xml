<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>week | Academic</title>
    <link>http://antonina1506.github.io/tag/week/</link>
      <atom:link href="http://antonina1506.github.io/tag/week/index.xml" rel="self" type="application/rss+xml" />
    <description>week</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 25 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://antonina1506.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>week</title>
      <link>http://antonina1506.github.io/tag/week/</link>
    </image>
    
    <item>
      <title>Data Science program languages</title>
      <link>http://antonina1506.github.io/post/post_program_languages/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>http://antonina1506.github.io/post/post_program_languages/</guid>
      <description>&lt;h2 id=&#34;data-science-program-languages&#34;&gt;Data Science program languages&lt;/h2&gt;
&lt;p&gt;В широком смысле &lt;em&gt;научный язык программирования&lt;/em&gt; - это язык программирования, который широко используется для вычислительной науки и вычислительной математики. В этом смысле C/C++ и Python можно считать научными языками программирования.&lt;/p&gt;
&lt;p&gt;В более широком смысле &lt;em&gt;научный язык программирования&lt;/em&gt; - это язык, разработанный и оптимизированный для использования математических формул и матриц. Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка. Например,ни в C ++, ни в Python нет встроенных матричных типов или функций для матричной арифметики (сложение, умножение и т. Д.); Вместо этого эта функциональность доступна через стандартные библиотеки. Научные языки программирования в более сильном смысле включают ALGOL, APL, Fortran, J, Julia, Maple, MATLAB и R.&lt;/p&gt;
&lt;p&gt;Научные языки программирования не следует путать с научным языком в целом, который относится к более высоким стандартам точности, правильности и краткости, ожидаемым от практиков научного метода&lt;/p&gt;
&lt;h2 id=&#34;r&#34;&gt;R&lt;/h2&gt;
&lt;p&gt;Язык R появился на свет в 1995 году как прямой наследник более старого языка S. Созданный с использованием C, фортрана и себя самого, R поддерживается организацией R Foundation for Statistical Computing.&lt;/p&gt;
&lt;h3 id=&#34;плюсы&#34;&gt;Плюсы:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Отличный ассортимент качественных специализированных пакетов с открытым исходным кодом. R имеет пакеты практически для любого статистического приложения, которое можно себе представить: нейронные сети, нелинейная регрессия, филогенетика и многое, многое другое.&lt;/li&gt;
&lt;li&gt;При базовой установке языка доступно множество статистических функций и методов. R также отлично справляется с матричной алгеброй.&lt;/li&gt;
&lt;li&gt;Качественная визуализация данных с использованием библиотек, вроде ggplot2.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Производительность. R не самый быстрый язык.&lt;/li&gt;
&lt;li&gt;Специфичность областей применения. R прекрасен для статистики и обработки данных, но как язык общего назначения он едва ли сгодится.&lt;/li&gt;
&lt;li&gt;Свои особенности. R имеет несколько необычных особенностей, на которые могут попасться программисты, знакомые с другими языками. Как пример: индексирование начинается с единицы, есть несколько операторов присваивания, структуры данных отличаются от традиционных.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;
&lt;p&gt;Гвидо ван Россум показал Пайтон в 1991 году. С тех пор он превратился в чрезвычайно популярный язык общего назначения, который широко применяется в обработке данных. Основные версии языка на данный момент – это 2.7 и 3.6.&lt;/p&gt;
&lt;h3 id=&#34;плюсы-1&#34;&gt;Плюсы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Пайтон очень популярен и имеет множество расширений и поддержку сообщества разработчиков.&lt;/li&gt;
&lt;li&gt;Python обладает простым и понятным новичкам синтаксисом – так что отлично подходит на роль первого языка программирования с низким порогом входа.&lt;/li&gt;
&lt;li&gt;Пакеты, вроде pandas, scikit-learn и Tensorflow, делают Python отличным вариантом для современных приложений с машинным обучением.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы-1&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Питон – язык с динамической типизацией. Так что следует быть внимательным и ожидать время от времени ошибок вроде тех, где метод ожидает получить на входе integer, а получает строку.&lt;/li&gt;
&lt;li&gt;По количеству узкоспециализированных пакетов для статистического анализа Python проигрывает R.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sql&#34;&gt;SQL&lt;/h2&gt;
&lt;p&gt;SQL (Structured Query Language) создан для определения, управления и создания запросов к реляционным базам данных. Он появился в 1974 году и с тех пор претерпел множество изменений, но его основные принципы остались прежними.&lt;/p&gt;
&lt;h3 id=&#34;плюсы-2&#34;&gt;Плюсы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Очень эффективен при работе с реляционными базами данных.&lt;/li&gt;
&lt;li&gt;Декларативный синтаксис делает SQL легко воспринимаемым языком. Совершенно ясно, что подразумевается под ‘SELECT name FROM users WHERE age &amp;gt; 18’.&lt;/li&gt;
&lt;li&gt;SQL используется во многих приложениях, так что ознакомиться с этим языком будет полезно.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы-2&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Аналитические возможности SQL довольно ограничены. Все что вам доступно – это суммирование, и подсчет и вывод среднего значения.&lt;/li&gt;
&lt;li&gt;Для программистов, привыкших к императивным языкам, декларативные конструкции SQL могут вызывать неудобства.&lt;/li&gt;
&lt;li&gt;Существует множество реализаций SQL, например, PostgreSQL, SQLite, MariaDB. Все они разняться в достаточной степени, чтобы вызывать боль.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;java&#34;&gt;Java&lt;/h2&gt;
&lt;p&gt;Java – крайне популярный язык общего назначения. Для работы использует JVM (Java Virtual Machine) – собственную абстрактную вычислительную систему, которая обеспечивает полную переносимость между различными платформами. Поддерживается Oracle Corporation.&lt;/p&gt;
&lt;h3 id=&#34;плюсы-3&#34;&gt;Плюсы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Java вездесущ. Многие современные системы и приложения созданы на Java.&lt;/li&gt;
&lt;li&gt;Строго типизированный язык. По отношению к определению типов Java крайне серьезен. Для приложений, работающих с большими объемами данных это бесценно.&lt;/li&gt;
&lt;li&gt;Java – высокопроизводительный компилируемый язык общего назначения. Один и тот же язык может быть использован и для написания бизнес-логики, и для аналитики больших объемов данных, на что не способны другие языки программирования для Data Science.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы-3&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Для узконаправленного анализа и специфичных статистических приложений синтаксис Java слишком многословен. Динамически типизированные R и Python здесь принесут куда больше пользы.&lt;/li&gt;
&lt;li&gt;Для Java создано не так много библиотек для работы со статистикой.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scala&#34;&gt;Scala&lt;/h2&gt;
&lt;p&gt;Скала разработан Мартином Одерски и выпущена в свет в 2004 год. Это еще один язык, который использует для работы JVM. Scala – мультипарадигмальный язык, который способен реализовать и ООП и функциональный подход.&lt;/p&gt;
&lt;h3 id=&#34;плюсы-4&#34;&gt;Плюсы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Scala + Spark = высокопроизводительные кластерные вычисления. Идеальный язык для тех, кто работает с наборами данных большого объема.&lt;/li&gt;
&lt;li&gt;Мультипарадигматика. Разработчик волен использовать как ООП, так и функциональный подход.&lt;/li&gt;
&lt;li&gt;Scala компилируется в байт-код Java и работает на JVM. Это позволяет Scala взаимодействовать с Java и в принципе делает его мощным языком общего назначения.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы-4&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Scala – не самый простой для изучения язык, так что как первый он едва ли сгодится.&lt;/li&gt;
&lt;li&gt;Синтаксис в целом и система типизации в языке сложные.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;julia&#34;&gt;Julia&lt;/h2&gt;
&lt;p&gt;Появился на свет в 2012 году. Язык был быстро принят в финансовой сфере.&lt;/p&gt;
&lt;h3 id=&#34;плюсы-5&#34;&gt;Плюсы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Julia компилируется just-in-time, что обеспечивает хорошую производительность. Он также прост в изучении и динамически типизирован.&lt;/li&gt;
&lt;li&gt;Julia, как и другие языки программирования для Data Science, предназначен для вычислений и анализа, но может быть использован и как язык общего назначения.&lt;/li&gt;
&lt;li&gt;Читабельность. Многие пользователи этого языка ссылаются на этот плюс как на ключевое преимущество.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы-5&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Незрелость. Так как язык появился недавно, некоторые пакеты могут работать нестабильно.&lt;/li&gt;
&lt;li&gt;Ограниченность набора пакетов – еще одно следствие молодости языка. В будущем Julia это наверняка наверстает, но пока R и Python дает этому языку фору.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;matlab&#34;&gt;MATLAB&lt;/h2&gt;
&lt;p&gt;MATLAB – признанный язык для вычислений, используется в академических кругах и промышленности. Разработан и лицензирован MathWorks, компанией, созданной в 1984 году, которая занимается разработкой программного обеспечения.&lt;/p&gt;
&lt;h3 id=&#34;плюсы-6&#34;&gt;Плюсы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Создан для вычислений. Идеально подходит для приложений, требующих сложных математических функций.&lt;/li&gt;
&lt;li&gt;Имеет ряд встроенных функций для визуализации данных.&lt;/li&gt;
&lt;li&gt;Используется во многих университетских курсах по физике, инженерии и прикладной математике. Как следствие широко применяется в этих областях.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;минусы-6&#34;&gt;Минусы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Проприетарная лицензия. Конечная стоимость, конечно, зависит от области применения (существуют домашняя, студенческая, академическая или стандартная лицензии), но раскошелиться придется в любом случае (от $55 до пары тысяч).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Существуют и другие языки общего назначения, которые так или иначе подходят для работы с данными. Приводим их краткий обзор.&lt;/p&gt;
&lt;h2 id=&#34;c&#34;&gt;C++&lt;/h2&gt;
&lt;p&gt;Мощный язык программирования общего назначения, обладающий молниеносной производительностью. Вопрос невысокой популярности C++ в Data Science объясняется выбором продуктивности вычислений против производительности языка.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Как сказал один пользователь Quora:&lt;/p&gt;
&lt;p&gt;«Если вы пишете код, который будет делать какой-то специальный анализ, и запустится всего раз, что вы выберете: потратить полчаса на программу, которая будет работать через 10 секунд или 10 минут на написание программы, которая запустится через минуту?»&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;javascript&#34;&gt;JavaScript&lt;/h2&gt;
&lt;p&gt;Хотя с появлением Node.js JavaScript стал серьезным серверным языком, его использование в Data Science ограничено (хотя есть, конечно, brain.js и synaptic.js). А виной тому некоторые его недостатки:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Хотя Node.js на данный момент 8 лет, существует всего несколько библиотек и модулей для работы с большими данными.&lt;/li&gt;
&lt;li&gt;Node.js довольно производительная платформа, но у самого JavaScript много критиков, и не без основания.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Node.js обладает асинхронным вводом/выводом – и это сильная сторона. Так что, в будущем это может сыграть в пользу JavaScript, как серьезного языка для обработки больших объемов данных. Другой вопрос в том, будет ли кто-то на его основе создавать то, что уже имеют другие языки программирования для Data Science.&lt;/p&gt;
&lt;h2 id=&#34;perl&#34;&gt;Perl&lt;/h2&gt;
&lt;p&gt;Perl имеет славу швейцарского ножа среди языков программирования, благодаря его универсальности, как скриптового языка. Он имеет много общего с Python и является динамически типизированным языком.&lt;/p&gt;
&lt;p&gt;Однако, в сравнении с тем же Python, он имеет крайне мало расширений для работы с данными и большого энтузиазма в этой области работы с Perl не наблюдается. Возможно, виной тому не слишком дружелюбный синтаксис.&lt;/p&gt;
&lt;h2 id=&#34;ruby&#34;&gt;Ruby&lt;/h2&gt;
&lt;p&gt;Ruby – еще один популярный динамически типизированный язык общего назначения. Тем не менее, он также не был принят разработчиками работающими с большими данными в сравнении с Python.&lt;/p&gt;
&lt;p&gt;Однако для Ruby существует проект SciRuby, созданный для вычислений и обработки данных. Впрочем, для серьезных исследований одного его оказывается недостаточно, поэтому Ruby остается не так популярен, как другие языки программирования для Data Science.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hectic week</title>
      <link>http://antonina1506.github.io/post/post_week4/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>http://antonina1506.github.io/post/post_week4/</guid>
      <description>&lt;h2 id=&#34;my-week&#34;&gt;My week&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve taken some math tests and prepared for an English exam. Besides, I prepared my math and English homework for the university. Moreover, I did some extar tasks: korean english. On Saturday I meet my friend from korean school at the cafe to do a Korean challenge. Here you can see the result ⇢ &lt;a href=&#34;https://www.youtube.com/watch?v=kDWWXVunYSo&amp;amp;t=88s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Video&lt;/a&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/kDWWXVunYSo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
